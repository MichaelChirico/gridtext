// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "gridtext_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// bl_make_grob_box
XPtr<NodePtr> bl_make_grob_box(RObject grob, double width_pt);
RcppExport SEXP _gridtext_bl_make_grob_box(SEXP grobSEXP, SEXP width_ptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type grob(grobSEXP);
    Rcpp::traits::input_parameter< double >::type width_pt(width_ptSEXP);
    rcpp_result_gen = Rcpp::wrap(bl_make_grob_box(grob, width_pt));
    return rcpp_result_gen;
END_RCPP
}
// bl_make_hbox
XPtr<NodePtr> bl_make_hbox(XPtr<NodeList> nodes, double vspacing_pt, double hspacing_pt);
RcppExport SEXP _gridtext_bl_make_hbox(SEXP nodesSEXP, SEXP vspacing_ptSEXP, SEXP hspacing_ptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<NodeList> >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< double >::type vspacing_pt(vspacing_ptSEXP);
    Rcpp::traits::input_parameter< double >::type hspacing_pt(hspacing_ptSEXP);
    rcpp_result_gen = Rcpp::wrap(bl_make_hbox(nodes, vspacing_pt, hspacing_pt));
    return rcpp_result_gen;
END_RCPP
}
// bl_make_node_list
XPtr<NodeList> bl_make_node_list(List nodes);
RcppExport SEXP _gridtext_bl_make_node_list(SEXP nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    rcpp_result_gen = Rcpp::wrap(bl_make_node_list(nodes));
    return rcpp_result_gen;
END_RCPP
}
// bl_calc_layout
void bl_calc_layout(XPtr<NodePtr> node, double width_pt, double height_pt);
RcppExport SEXP _gridtext_bl_calc_layout(SEXP nodeSEXP, SEXP width_ptSEXP, SEXP height_ptSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<NodePtr> >::type node(nodeSEXP);
    Rcpp::traits::input_parameter< double >::type width_pt(width_ptSEXP);
    Rcpp::traits::input_parameter< double >::type height_pt(height_ptSEXP);
    bl_calc_layout(node, width_pt, height_pt);
    return R_NilValue;
END_RCPP
}
// bl_render
RObject bl_render(XPtr<NodePtr> node, double x_pt, double y_pt);
RcppExport SEXP _gridtext_bl_render(SEXP nodeSEXP, SEXP x_ptSEXP, SEXP y_ptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<NodePtr> >::type node(nodeSEXP);
    Rcpp::traits::input_parameter< double >::type x_pt(x_ptSEXP);
    Rcpp::traits::input_parameter< double >::type y_pt(y_ptSEXP);
    rcpp_result_gen = Rcpp::wrap(bl_render(node, x_pt, y_pt));
    return rcpp_result_gen;
END_RCPP
}
// unit_pt
NumericVector unit_pt(NumericVector x);
RcppExport SEXP _gridtext_unit_pt(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(unit_pt(x));
    return rcpp_result_gen;
END_RCPP
}
// gpar_empty
List gpar_empty();
RcppExport SEXP _gridtext_gpar_empty() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(gpar_empty());
    return rcpp_result_gen;
END_RCPP
}
// text_grob
List text_grob(CharacterVector label, NumericVector x_pt, NumericVector y_pt, RObject gp, RObject name);
RcppExport SEXP _gridtext_text_grob(SEXP labelSEXP, SEXP x_ptSEXP, SEXP y_ptSEXP, SEXP gpSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type label(labelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_pt(x_ptSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pt(y_ptSEXP);
    Rcpp::traits::input_parameter< RObject >::type gp(gpSEXP);
    Rcpp::traits::input_parameter< RObject >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(text_grob(label, x_pt, y_pt, gp, name));
    return rcpp_result_gen;
END_RCPP
}
// set_grob_coords
RObject set_grob_coords(RObject grob, NumericVector x, NumericVector y);
RcppExport SEXP _gridtext_set_grob_coords(SEXP grobSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type grob(grobSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(set_grob_coords(grob, x, y));
    return rcpp_result_gen;
END_RCPP
}
// test_hbox
RObject test_hbox(List grobs, NumericVector widths, double box_width, double x, double y, double vspacing, double hspacing);
RcppExport SEXP _gridtext_test_hbox(SEXP grobsSEXP, SEXP widthsSEXP, SEXP box_widthSEXP, SEXP xSEXP, SEXP ySEXP, SEXP vspacingSEXP, SEXP hspacingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type grobs(grobsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type widths(widthsSEXP);
    Rcpp::traits::input_parameter< double >::type box_width(box_widthSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type vspacing(vspacingSEXP);
    Rcpp::traits::input_parameter< double >::type hspacing(hspacingSEXP);
    rcpp_result_gen = Rcpp::wrap(test_hbox(grobs, widths, box_width, x, y, vspacing, hspacing));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP run_testthat_tests();

static const R_CallMethodDef CallEntries[] = {
    {"_gridtext_bl_make_grob_box", (DL_FUNC) &_gridtext_bl_make_grob_box, 2},
    {"_gridtext_bl_make_hbox", (DL_FUNC) &_gridtext_bl_make_hbox, 3},
    {"_gridtext_bl_make_node_list", (DL_FUNC) &_gridtext_bl_make_node_list, 1},
    {"_gridtext_bl_calc_layout", (DL_FUNC) &_gridtext_bl_calc_layout, 3},
    {"_gridtext_bl_render", (DL_FUNC) &_gridtext_bl_render, 3},
    {"_gridtext_unit_pt", (DL_FUNC) &_gridtext_unit_pt, 1},
    {"_gridtext_gpar_empty", (DL_FUNC) &_gridtext_gpar_empty, 0},
    {"_gridtext_text_grob", (DL_FUNC) &_gridtext_text_grob, 5},
    {"_gridtext_set_grob_coords", (DL_FUNC) &_gridtext_set_grob_coords, 3},
    {"_gridtext_test_hbox", (DL_FUNC) &_gridtext_test_hbox, 7},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_gridtext(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
